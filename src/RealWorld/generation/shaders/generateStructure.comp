/*!
 *  @author     Dubsky Tomas
 */
#version 460
#include <RealWorld/generation/shaders/generateStructure.glsl>
#include <RealWorld/generation/shaders/generationPll.glsl>
#include <RealWorld/generation/shaders/GenerationPC.glsl>

layout (local_size_x = k_genGroupSize,
        local_size_y = k_genGroupSize,
        local_size_z = 1
) in;

layout (set = 0, binding = k_tilesImageBinding, rg8ui)
    uniform restrict writeonly uimage2DArray u_layerImage;
layout (set = 0, binding = k_materialImageBinding, r8ui)
    uniform restrict writeonly uimage2DArray u_materialImage;

void main(){
    // Compute position
    ivec2 pTi = p_.chunkTi[gl_WorkGroupID.z]
                + ivec2(gl_GlobalInvocationID.xy)
                - k_genBorderWidth;
    vec2 pPx = vec2(pTi) * TilePx;

    // Compute terrain
    GeneratedTile gen = calcBasicTerrain(pPx, p_.seed);

    // Store the terrain
    imageStore(u_layerImage,
        ivec3(gl_GlobalInvocationID),
        gen.tile.xyxy // Block
    );
    imageStore(u_layerImage,
        ivec3(
            gl_GlobalInvocationID.xy,
            gl_GlobalInvocationID.z + 2 * k_chunkGenSlots
        ),
        gen.tile.zwzw // Wall
    );
    imageStore(u_materialImage,
        ivec3(gl_GlobalInvocationID),
        gen.material.rrrr // Material
    );
}
