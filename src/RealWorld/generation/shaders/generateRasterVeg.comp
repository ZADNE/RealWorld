/*!
 *  @author     Dubsky Tomas
 */
#version 460
#include <RealWorld/world/shaders/random.glsl>
#include <RealWorld/generation/shaders/generateStructure.glsl>
#include <RealWorld/generation/shaders/vegDistribution.glsl>
#include <RealWorld/generation/shaders/generationPll.glsl>
#include <RealWorld/vegetation/shaders/BranchSB.glsl>
#define VegPrepSB_ACCESS readonly
#include <RealWorld/generation/shaders/VegPrepSB.glsl>

layout (local_size_x = 2,
        local_size_y = 32,
        local_size_z = 1
) in;

void main(){
    BranchInstance instance = b_vegPrep.branchInstances[gl_WorkGroupID.x];
    g_randomState = instance.randomSeed ^ gl_LocalInvocationIndex * 2713;
    uint val;
    switch (instance.wallType){
    case k_wheatWl:
        val = random() & 124 + uint(gl_LocalInvocationID.y >= 24) * 128;
        break;
    default:
        uint distToRoot = uint(length(instance.offsetTi + vec2(gl_LocalInvocationID.xy)));
        uint bud = uint(((random() & 127) + 30) < distToRoot);
        bud += uint(((random() & 127) + 40) < distToRoot);
        bud += uint(((random() & 127) + 50) < distToRoot);
        val = bud;
        break;
    }
    storeBranchTexel(instance.outputIndex, ivec2(gl_LocalInvocationID.xy), val);
}
