/*!
 *  @author     Dubsky Tomas
 */
#version 460
const int TreePreparationSB_BINDING = 6;
#define TreePreparationSB_ACCESS writeonly
#include <RealWorld/generation/shaders/TreePreparationSB.glsl>
#include <RealWorld/generation/shaders/generateStructure.glsl>
#include <RealWorld/generation/shaders/vegetation.glsl>

const float k_piHalf = 1.57079632679;
const float k_piQuarter = 0.785398163;

layout( local_size_x = 32,
        local_size_y = 1,
        local_size_z = 1
) in;

const uint k_invocOffsetTi = iChunkTi.x / gl_WorkGroupSize.x;

shared uint s_newVegetationCount;

void main(){
    // Init shared vars
    if (gl_LocalInvocationIndex == 0){
        s_newVegetationCount = 0;
    }
    barrier();

    // Sum green mass
    float pPx = float(p_chunkOffsetTi.x + gl_LocalInvocationIndex * k_invocOffsetTi) * TilePx.x;
    vec2 biomeClimate = biomeClimate(pPx, p_seed);
    float greenMass = biomeClimate.x * biomeClimate.y;

    /*if (gl_LocalInvocationIndex == 0 && horizonTi >= p_chunkOffsetTi.y && horizonTi < (p_chunkOffsetTi.y + iChunkTi.y)) {
        // The chunk is on the horizon
        atomicAdd(s_newVegetationCount, 1);
    }*/

    barrier();
    if (gl_LocalInvocationIndex == 0){
        b_dispatchSize = uvec4(s_newVegetationCount, 1, 1, 0);
    }
}
