#version 460
#include <RealWorld/generation/shaders/generateStructure.glsl>
#include <RealWorld/reserved_units/images.glsl>

layout( local_size_x = GEN_CS_GROUP_SIZE,
        local_size_y = GEN_CS_GROUP_SIZE,
        local_size_z = 1
) in;

layout(binding = IMG_UNIT_GEN_TILES0, rgba8ui) uniform restrict writeonly uimage2D tilesImage;
layout(binding = IMG_UNIT_GEN_MATERIAL, rgba8ui) uniform restrict writeonly uimage2D materialImage;

void main(){
    //Compute position
    ivec2 pTi = chunkOffsetTi + ivec2(gl_GlobalInvocationID.xy) - GEN_BORDER_WIDTH;
    vec2 pPx = vec2(pTi) * TILEPx;
    
    //Compute terrain
    uvec4 material;
    uvec4 tile;
    basicTerrain(pPx, material, tile);
    
    //Store the terrain
    imageStore(materialImage, ivec2(gl_GlobalInvocationID.xy), material);
    imageStore(tilesImage, ivec2(gl_GlobalInvocationID.xy), tile);
}
