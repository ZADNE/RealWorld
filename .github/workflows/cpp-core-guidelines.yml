name: C++ Core Guidelines

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      realengine-tag:
        description: 'Tag of RealEngine to build against. Latest release is used if not provided.'
        default: ''

jobs:
  cpp-core-guidelines:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        build_type: [Debug]
        clang_tidy: [clang-tidy-18]

    steps:
    - name: Parse pull request inputs
      if: github.event_name == 'pull_request'
      id: parse-pull-request-inputs
      uses: ZADNE/pull-request-inputs@v0.1
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.head_ref }}
        workflow: .github/workflows/cpp-core-guidelines.yml

    - name: Alias pull request inputs
      if: ${{ github.event_name == 'pull_request' }}
      shell: bash
      run: |
        echo "${{ steps.parse-pull-request-inputs.outputs.parsed }}" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV

    - name: Alias pull request inputs
      if: ${{ github.event_name != 'pull_request' }}
      shell: bash
      run: |
        echo "${{ toJSON(inputs) }}" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV

    - name: Prepare variables
      shell: bash
      run: |
        echo "repo-name=$(basename -- "${{ github.repository }}")" >> $GITHUB_ENV
        echo "download-dir=${{ github.workspace }}/downloaded" >> "$GITHUB_ENV"
        echo "build-dir=${{ github.workspace }}/Real/build" >> "$GITHUB_ENV"
        echo "source-dir=${{ github.workspace }}/Real" >> "$GITHUB_ENV"
        echo "report-file=${{ github.workspace }}/clang-tidy-report.txt" >> "$GITHUB_ENV"
        echo "realengine-package=RealEngine-v2.0.0-${{ matrix.os }}-${{ matrix.build_type }}.7z" >> "$GITHUB_ENV"

    - name: Clone Real
      uses: actions/checkout@v4
      with:
        repository: ZADNE/Real
        ref: main
        path: 'Real'

    - name: Download RealEngine
      run: >
        gh release download
        ${{ env.realengine-tag }}
        --repo ZADNE/RealEngine
        --pattern ${{ env.realengine-package }}
        --dir ${{ env.download-dir }}
        ;
        7z x ${{ env.download-dir }}/${{ env.realengine-package }} -o${{ env.download-dir }}
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Clone RealWorld
      uses: actions/checkout@v4
      with:
        path: 'Real/${{ env.repo-name }}'

    - name: Set up Vulkan SDK
      uses: humbletim/install-vulkan-sdk@main
      with:
        version: 1.3.290.0
        cache: true

    - name: Set up SDL2
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev libsdl2-2.0-0 libsdl2-ttf-dev libsdl2-ttf-2.0-0 -y;

    - name: Configure CMake
      run: >
        cmake -B ${{ env.build-dir }}
        -DCMAKE_CXX_COMPILER=g++-14
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        -DCMAKE_PREFIX_PATH=${{ env.download-dir }}
        -S ${{ env.source-dir }}

    - name: Compile shaders
      run: >
        cmake --build ${{ env.build-dir }} --target RealWorld_Shaders --parallel 4

    - name: Real linting check
      uses: ZADNE/RealLinting@v0.1
      with:
        clang-tidy: ${{ matrix.clang_tidy }}
        compile-commands-json: ${{ env.build-dir }}/compile_commands.json
        report-file: ${{ env.report-file }}

    - name: Check report
      shell: bash
      run: |
        if [ -s ${{ env.report-file }} ]; then
          echo "Some files did not pass linting! Report follows:"
          cat ${{ env.report-file }}
          exit 1
        fi